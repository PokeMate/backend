plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
    id 'jacoco'
}

group = 'uzh.ase'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Hoxton.SR3")
}

dependencies {
	//implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	//implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	//implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	//implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	//implementation 'org.springframework.boot:spring-boot-starter-integration'
	implementation 'org.springframework.boot:spring-boot-starter-jersey'
	//implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	//implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//implementation 'org.apache.kafka:kafka-streams'
	//implementation 'org.springframework.cloud:spring-cloud-starter-oauth2'
	//implementation 'org.springframework.kafka:spring-kafka'
	//implementation 'org.springframework.session:spring-session-core'
	implementation 'org.mongodb:bson'
	implementation 'org.mongodb:mongodb-driver'
	implementation 'org.mongodb:mongo-java-driver'
	implementation 'com.querydsl:querydsl-mongodb'
	//implementation 'org.codehaus.jackson:jackson-mapper-asl'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	
	
	compileOnly 'org.projectlombok:lombok'
	
	//runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
	//testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'org.springframework.integration:spring-integration-test'
	//testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

test {
	useJUnitPlatform()
	useJUnit()
}
